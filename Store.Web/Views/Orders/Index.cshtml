@model Store.Models.ViewModels.Orders.OrderListingViewModel

@{
    ViewBag.Title = "Orders";
}

<h2>Поръчки</h2>
<br />



<div class="row">
    <div class="col-md-6">
        <form method="get">
            <div class="form-group">
                <input type="text" name="search" value="@Model.Search" />
                <input type="submit" class="btn btn-primary" value="Search Logs" />
            </div>
        </form>
    </div>

    <div class="col-md-6">
        @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-outline-primary btn-lg btn-block" })

    </div>

</div>

@{
    var peviousPageDisable = Model.CurrentPage == 1 ? "disabled" : String.Empty;
    var nextPageDisable = Model.CurrentPage == Model.TotalPages ? "disabled" : String.Empty;

    var routeValuePreviousPage = new Dictionary<string, string> { ["page"] = Model.PreviousPage.ToString() };
    var routeValueNextPage = new Dictionary<string, string> { ["page"] = Model.NextPage.ToString() };

    var searchQuery = string.IsNullOrEmpty(Model.Search) ? string.Empty : ("Search=" + Model.Search + "&");

}

<ul class="pagination">
    <li class="page-item @peviousPageDisable">
        <a class="page-link  @peviousPageDisable" href="?@(searchQuery)page=@Model.PreviousPage" tabindex="-1">Previous</a>
    </li>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <li class="page-item @(Model.CurrentPage == i ? "active": String.Empty)"><a class="page-link" href="?@(searchQuery)page=@i">@i</a></li>


    }
    <li class="page-item @nextPageDisable">
        <a class="page-link @nextPageDisable" href="?@(searchQuery)page=@Model.NextPage">Next</a>
    </li>
</ul>


<div class="table-orders">
    <br>
    <table class="table table-striped">
        <tr>
            <th>
                @Html.DisplayName("Име на Модел")
            </th>
            <th>
                @Html.DisplayName("Име на Клиент")

            </th>
            <th>
                @Html.DisplayName("Град")

            </th>
            <th>
                @Html.DisplayName("Дата на Сватбата")

            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Orders)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ModelName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ClientName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WedingDate)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-warning btn-sm" }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-outline-info btn-sm" })
                </td>
            </tr>
        }

    </table>
</div>
<br />

